version: '3'

#declare the list of services we want to launch
services:
 

  broker-service:
    build: #build the image from the golang source 
      context: ./../broker-service        #declares its dir
      dockerfile: ./../broker-service/broker-service.dockerfile   #get the docker file from the broker-service dir
    restart: always #restart incase it dies 
    ports:
      - "8080:80" #mappin the port , tells docker to listen on port 8080 on  your local machine, and forward it to port 80 inside docker
    deploy:
      mode: replicated
      replicas: 1  #listens to 1 port only

  logger-service:
    build:
      context: ./../logger-service
      dockerfile: ./../logger-service/logger-service.dockerfile
    restart: always
    deploy:
      mode: replicated
      replicas: 1

  authentication-service:
    build:
      context: ./../authentication-service
      dockerfile: ./../authentication-service/authentication-service.dockerfile
    restart: always
    ports:
      - "8081:80"
    deploy:
      mode: replicated
      replicas: 1
    environment: #the env variable will be called in the auth service & must be the same as the postgres-service
      DSN: "host=postgres port=5432 user=postgres password=philippians dbname=postgres sslmode=disable timezone=UTC connect_timeout=5"


  mail-service: 
    build: 
     context: ./../mail-service
     dockerfile: ./../mail-service/mail-service.dockerfile
    restart: always      
    deploy:
      mode: replicated
      replicas: 1
    environment:
      MAIL_DOMAIN: localhost
      MAIL_HOST: mailhog
      MAIL_PORT: 1025
      MAIL_ENCRYPTION: none
      MAIL_USERNAME: ""
      MAIL_PASSWORD: ""
      FROM_NAME: "John Smith"
      FROM_ADDRESS: john.smith@example.com



  
  listener-service:
    build:
      context: ./../listener-service
      dockerfile: ./../listener-service/listener-service.dockerfile
    deploy:
      mode: replicated
      replicas: 1

          




  postgres:
    image: 'postgres:14.5'
    ports:
      - "5432:5432" #5432 on the machine : 5432 in the docker container
    
    restart: "always"  
    deploy:
      mode: replicated
      replicas: 1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: philippians
      POSTGRES_DB: postgres
    #volumes set for data to persist
    volumes:
      - ./db-data/postgres/:/var/lib/postgresql/data/
    

  mongo:
    image: 'mongo:4.2.16-bionic'
    ports:
      - "27017:27017"

    deploy:
      mode: replicated
      replicas: 1  
    environment:
      MONGO_INITDB_DATABASE: logs
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password

    volumes:
      - ./db-data/mongo/:/data/db

 

  mailhog: 
    image: 'mailhog/mailhog:latest'
    ports: 
      - "1025:1025" #ports in the contaainer
      - "8025:8025" #8025 is the web interface


      
  rabbitmq:
    image: 'rabbitmq:3.9-alpine'
    ports:
      - "5672:5672"
    deploy:
      mode: replicated
      replicas: 1
    volumes:
      - ./db-data/rabbitmq/:/var/lib/rabbitmq/